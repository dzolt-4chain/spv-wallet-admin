import { StrictMode } from 'react';
import ReactDOM from 'react-dom/client';
import App from '@/App.tsx';
import './index.css';
import { AuthProvider, SpvWalletProvider, ThemeProvider } from '@/contexts';
import { ConfigProvider } from '@4chain-ag/react-configuration';
import { TooltipProvider } from '@/components';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { createRouter } from '@tanstack/react-router';
import { routeTree } from '@/routes/routeTree.autogenerated.ts';

// Render the app
const rootElement = document.getElementById('app')!;

const queryClient = new QueryClient();

// Create a new router instance
export const router = createRouter({
  routeTree,
  context: { auth: undefined!, queryClient, spvWallet: undefined! },
  defaultPreload: 'intent',
  defaultPreloadStaleTime: 0,
});

// Register the router instance for type safety
declare module '@tanstack/react-router' {
  interface Register {
    router: typeof router;
  }
}

if (!rootElement.innerHTML) {
  const root = ReactDOM.createRoot(rootElement);
  root.render(
    <StrictMode>
      <QueryClientProvider client={queryClient}>
        <ThemeProvider defaultTheme="light" storageKey="vite-ui-theme">
          <ConfigProvider>
            <SpvWalletProvider>
              <AuthProvider>
                <TooltipProvider>
                  <App />
                </TooltipProvider>
              </AuthProvider>
            </SpvWalletProvider>
          </ConfigProvider>
        </ThemeProvider>
      </QueryClientProvider>
    </StrictMode>,
  );
}
